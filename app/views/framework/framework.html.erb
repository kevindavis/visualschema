<h1>Demoware</h1>

<div id="tilepane-container">
	<div id="tilepane">
		<span id="tile-empty">There are no models in your application.. get cracking!</span>
		<!-- content AJAX'd in here -->
	</div>
	<a id="tile-new-link" href="#">Add</a>
	<div id="tile-new">
		<form id="new-model-form" 
					action="/framework/models" method="post" data-remote="true" data-type="text" 
					accept-charset="utf-8">
			<label for="model">Name</label>
			<input type="text" name="model" />
			<input type="submit" value="Create &rarr;">
		</form>
	</div>
</div>

<div id="model-editor" style="display:none;">
	<h2>Columns</h2>
	<ul id="columns">
		<!-- for cloning to create others.. -->
		<li id="column-template">
			<span class="column-name"></span>
			<span class="column-type"></span>
			<img src="/images/delete.gif"/>
		</li>			
		<!-- content AJAX'd in here -->
	</ul>
	<a id="column-new-link" href="#">Add</a>
	<div id="column-new">
		<form id="column-new-form" 
					action="/framework/columns" method="post" data-remote="true" data-type="json"
					accept-charset="utf-8">
			<input type="hidden" name="model" value="stub" /> <!-- changed by JS in the switchTile function -->
			<input type="text" name="column_name" />
			<select name="column_type">
				<!-- types supported by Rails: :primary_key, :string, :text, :integer, :float, :decimal, :datetime, :timestamp, :time, :date, :binary, :boolean -->
				<option value="string">single line of text</option>
				<option value="text">multiple lines of text</option>
				<option value="integer">number</option>
				<option value="decimal">currency</option>
				<option value="datetime">date and time</option>
				<option value="time">time</option>
				<option value="date">date</option>
				<option value="boolean">true/false</option>
			</select>
			<input type="submit" value="Create &rarr;">
		</form>
		<a id="column-new-cancel" href="#">cancel</a>
	</div>
	
	<h2>Relationships</h2>
	<ul id="associations">	
		<!-- content AJAX'd in here -->
	</ul>
	<a id="association-add" href="#">Add</a>
	
	<br/>
	<a id="model-remove" href="#">Destroy</a>
</div>
	
<script type="text/javascript" charset="utf-8">	
	
	function displayTile (name)
	{
		$("<div/>", {
			id: "tile-"+name,
			class: "tile",
			text: name,
			click: function(){ switchTile(this.id) }
		}).appendTo($("#tilepane"));
	}
	
	function displayColumn (name, type) 
	{
		var $li = $("#column-template").clone().removeAttr("id");
		$(".column-name", $li).text(name);
		$(".column-type", $li).text(" ("+type+")");
		$($li).addClass("column");
		$($li).hover(function(){
			$("img", this).toggle();
		});
		$("img", $li).hide();
		$("img", $li).click(function(){
			if(confirm("Are you sure? who knows what will happen if you remove a column.."))
			{
				var to_remove = $(".column-name", $(this).parent()).text();
				$(this).parent().fadeOut();
				$.post("/framework/columns/remove", {model: $(".tile-selected").html(), column: to_remove});
				// TODO: make this more robust than this fire-and-forget ;-)
			}
		});
		
		$li.appendTo($("#columns"));
	}
	
	function displayAssociation (name, type)
	{
		$("<li/>", {
			text: name + " (" + type + ")"
		}).appendTo($("#associations"));		
	}
	
	function displayModel (model)
	{
		// remove the columns & associations from the previous model
		$("#columns .column").remove();
		$("#associations .association").remove();
		
		// get the columns
		$.getJSON('/framework/columns/'+model, function(data){
			$.each(data, function(index,value){
				displayColumn(value.name, value.type);
			});			
		});
		
		// get the associations
		$.getJSON('/framework/associations/'+model, function(data){
			$.each(data, function(index,value){
				displayAssociation(value.name, value.type);
			});			
		});		
	}
	
	function hideColumnForm() 
	{
		$("#column-new").hide();
		$("#column-new-form")[0].reset();
		$("#column-new-link").show();		
	}
	
	function switchTile(tileID)
	{		
		if($("#tilepane .tile").length == 0)
		{
			$("#tile-empty").show();
			$("#model-editor").hide();
		}
		else
		{
			$(".tile-selected").removeClass("tile-selected");
			$("#"+tileID).addClass("tile-selected");

			var model = $("#"+tileID).html(); // tile names are model names
			displayModel(model);
			hideColumnForm();
			$('#column-new-form input[name="model"]').val(model);
			$("#model-editor").show();
		}
	}

	function setup()
	{
		// get the models
		$.getJSON('/framework/models', function(data){
			if(data.length > 0)
			{
				$.each(data, function(index,value){
					displayTile(value);
				});
				// switch to the first one
				switchTile($("#tilepane .tile").first().attr("id"));
				$("#tile-empty").hide();
				$("#model-editor").show();
			} 
		});
		
		// new model experience
		$("#tile-new").hide();
		$("#tile-new-link").click(function(){ 
			$("#tile-new").show();
			$("#tile-empty").hide();
			$("#tile-new-link").hide();
		});
		
		$("#new-model-form")
			.bind("ajax:success", function(evt, data, status, xhr){
				displayTile(xhr.responseText);
				switchTile("tile-"+xhr.responseText);
				$("#tile-new").hide();
				$("#tile-new-link").show();
			})
			.bind("ajax:error", function(evt, data, status, xhr){
				// TODO: when model create fails
			});
		
		// remove model button
		$("#model-remove").click(function(){
			if(confirm("Are you sure? This will remove the model and any data."))
			{
				var to_remove = $(".tile-selected");
				$.post('/framework/models/remove', { model: to_remove.html()}, 
					function(){
						to_remove.remove();
						switchTile();
					});
			}
		});
		
		// new column experience
		$("#column-new").hide();
		$("#column-new-link").click(function(){
			$("#column-new").show();
			$("#column-new-link").hide();
			$('#column-new-form input[name="column_name"]').focus();
		});
		$("#column-new-cancel").click(function(){ hideColumnForm() });
		
		$("#column-new-form")
			.bind("ajax:success", function(evt, data, status, xhr){
				displayColumn(data.name,data.type);
				$("#column-new-form")[0].reset();
			})
			.bind("ajax:error", function(evt, data, status, xhr){
				// TODO: when column create fails
			});
		
	}
			
	setup();
</script>